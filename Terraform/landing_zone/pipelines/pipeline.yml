parameters:
- name: region
  displayName: Region
  type: string
  default: eastus
  values:
  - eastus
  - centralus

- name: reg
  type: object
  default:
    eastus:
      name: eus
    centralus: 
      name: cus

- name: environment
  displayName: Environment
  type: string
  default: Prod
  values:
  - Dev
  - Prod

- name: org
  displayName: Organization
  type: string
  default: rhp
  values:
  - rhp

- name: svc
  displayName: Service
  type: string
  default: hub
  values:
  - hub

- name: env
  type: object
  default:
    Dev:
      name: dev
      subscription: 3ee79b00-e753-4288-bd5f-dae866dfc372
      service_connection: "devops-lz-dev-sc"
      service_connection_id: "b3a696d4-6940-4ebd-96d4-b43621357255"
      devops_org: renovohomepartners
      key_vault_name: "rhp-hub-eus-dev-kv"

    Prod:
      name: prod
      subscription: 84d1410c-0939-4d53-ac16-abad3acf18bb
      service_connection: "devops-lz-prod-sc"
      service_connection_id: "d195e12a-df55-49b4-b670-cf7720f5fd3d"
      devops_org: renovohomepartners
      key_vault_name: "rhp-hub-eus-prod-kv"

variables:
  - group: 'devops-${{ parameters.reg[parameters.region].name }}-${{ parameters.env[parameters.environment].name }}-lz'
  - name: TENANT_ID
    value: 4524f376-8765-42c3-be76-1e7e0171444c
  - name: WORKSPACE
    value: '${{ parameters.org }}-${{ parameters.reg[parameters.region].name }}-${{ parameters.env[parameters.environment].name }}'
  - name: STATE_RG
    value: '${{ parameters.svc }}-state-${{ parameters.reg[parameters.region].name }}-${{ parameters.env[parameters.environment].name }}-rg'
  - name: STATE_SA
    value: '${{ parameters.svc }}state${{ parameters.reg[parameters.region].name}}${{ parameters.env[parameters.environment].name }}${{ parameters.org }}'
  - name: SERVICE_CONNECTION_NAME
    value: ${{ parameters.env[parameters.environment].service_connection }}
  - name: SERVICE_CONNECTION_ID
    value: ${{ parameters.env[parameters.environment].service_connection_id }}
  - name: ARTIFACT_DIRECTORY
    value: $(Build.ArtifactStagingDirectory)
  - name: TF_VAR_SUB
    value: ${{ parameters.env[parameters.environment].subscription }}
  - name: TF_VAR_REGION
    value: ${{ parameters.region }}
  - name: TF_VAR_REGION_ABR
    value: ${{ parameters.reg[parameters.region].name }}
  - name: TF_VAR_ENV
    value: ${{ parameters.env[parameters.environment].name }}
  - name: TF_VAR_ORG
    value: ${{ parameters.org }}
  - name: TF_VAR_SVC
    value: ${{ parameters.svc }}
  - name: TF_VAR_DEVOPS_ORG
    value: ${{ parameters.env[parameters.environment].devops_org }}
  - name: TF_VAR_KEY_VAULT_NAME
    value: ${{ parameters.env[parameters.environment].key_vault_name }}

pool: $(TF_VAR_AGENT_POOL)   
  #vmImage: 'ubuntu-20.04'     #Use this for initial run

stages:
- stage: Create_Terraform_Prerequisites
  jobs:
  - deployment: create_prerequisites
    displayName: Create Terraform Prerequisites
    environment: terraform_prerequisites
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureCLI@2
              displayName: "Pre-Reqs"
              inputs:
                azureSubscription: $(SERVICE_CONNECTION_ID)
                addSpnToEnvironment: true
                scriptType: bash
                workingDirectory: '$(System.DefaultWorkingDirectory)/'
                arguments: ${{ parameters.region }}
                scriptPath: scripts/01-create-prerequisites.sh
            - task: Bash@3
              displayName: "print outputs"
              inputs:
                targetType: 'inline'
                script: 'echo "subcription_id = $(TF_VAR_SUB)"'
          
- stage: Terraform_Plan
  jobs:
  - deployment: terraform_plan
    displayName: Terraform Plan
    environment: terraform_plan
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            ### This task is used to get the agent IP address and integrates it with the Azure Key Vault.
            # - task: AzurePowerShell@5
            #   displayName: 'Allow agent IP'
            #   inputs:
            #     azureSubscription: $(SERVICE_CONNECTION_ID)
            #     azurePowerShellVersion: LatestVersion
            #     ScriptType: InlineScript
            #     Inline: |
            #       $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            #       Add-AzKeyVaultNetworkRule -VaultName $(TF_VAR_KEY_VAULT_NAME) -ResourceGroupName "hub-shared-eus-prod-rg" -IpAddressRange $ip
            #       echo "##vso[task.setvariable variable=agentIP]ip"
            - task: Bash@3
              displayName: 'Retrieve agent IP'
              inputs:
                targetType: 'inline'
                script: |
                  ip=$(curl -s http://ifconfig.me/ip)
                  echo "##vso[task.setvariable variable=agentIP]$ip"

            - task: Bash@3
              displayName: 'Print agent IP'
              inputs:
                targetType: 'inline'
                script: |
                  echo "Agent IP: $(agentIP)"

#            - task: AzureCLI@2
#              displayName: 'Allow agent IP'
#              inputs:
#                azureSubscription: $(SERVICE_CONNECTION_NAME)
#                addSpnToEnvironment: true
#                scriptType: bash
#                scriptLocation: inlineScript
#                inlineScript: |
#                  ipRange="$(agentIP)"
#                  az keyvault network-rule add --name $(TF_VAR_KEY_VAULT_NAME) --ip-address $ipRange
#              condition: succeededOrFailed()


            - task: Bash@3
              displayName: 'Print subscription ID'
              inputs:
                targetType: 'inline'
                script: |
                  echo "Subscription IP: $(TF_VAR_SUB)"

## This task reads the secrets from the Azure Key Vault.
            # - task: AzureKeyVault@2
            #   displayName: "Read Key Vault Secrets"
            #   inputs:
            #     ConnectedServiceName: $(SERVICE_CONNECTION_NAME)
            #     KeyVaultName: $(TF_VAR_KEY_VAULT_NAME)
            #     SecretsFilter: '*'
            #     RunAsPreJob: false

            - task: AzureCLI@2
              displayName: "Plan"
              inputs:
                azureSubscription: $(SERVICE_CONNECTION_NAME)
                addSpnToEnvironment: true
                scriptType: bash
                workingDirectory: '$(System.DefaultWorkingDirectory)/'
                arguments: $(TF_VAR_PAT) $(TF_VAR_VPN_PSK)
                scriptPath: scripts/02-terraform-plan.sh
                env: |
                  TF_VAR_SQL_ENGINE_STRING: $(TF_VAR_SQL_ENGINE_STRING)
                  TF_VAR_BLOB_CONNECTION_STRING: $(TF_VAR_BLOB_CONNECTION_STRING)
                  TF_VAR_TABLE_CONNECTION_STRING: $(TF_VAR_TABLE_CONNECTION_STRING)

            - task: PublishBuildArtifacts@1
              displayName: Publish Terraform Plan to Artifacts
              inputs:
                PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                ArtifactName: 'plan'
                publishLocation: 'Container'

## This stage is used to manually approve the Terraform plan before applying it.
#- stage: Pre_Apply_Approval
#  displayName: "Pre-Apply Approval"
#  jobs:
#  - job: Approval
#    displayName: "Manual Approval"
#    pool:
#      vmImage: 'ubuntu-latest'
#    steps:
#    - task: ManualValidation@0
#      inputs:
#        instructions: 'Please review the Terraform plan and approve to proceed with apply.'
#        onTimeout: 'reject'
#        timeout: '43200' # Timeout in seconds (12 hours)
#        notifyUsers: 
#          - 'jeremy_butler@shi.com'
#          - 'rodney.frederick@renovohomepartners.com'
#          - 'josh.prater@renovohomepartners.com'
#          - 'michael.verbeck@renovohomepartners.com'

- stage: Terraform_Apply
  jobs:
  - deployment: terraform_apply
    displayName: Terraform Apply
    environment: terraform_apply
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: DownloadBuildArtifacts@0
              displayName: Download Terraform Plan from Artifacts
              inputs:
                buildType: current
                downloadType: single
                artifactName: 'plan'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureCLI@2
              displayName: "Apply"
              inputs:
                azureSubscription: $(SERVICE_CONNECTION_NAME)
                addSpnToEnvironment: true
                scriptType: bash
                workingDirectory: '$(System.DefaultWorkingDirectory)/'
                arguments: ${{ parameters.env[parameters.environment].name }} ${{ parameters.reg[parameters.region].name }}
                scriptPath: scripts/03-terraform-apply.sh

            #### This task removes the agent IP from the Key Vault Network Rules
            - task: AzureCLI@2
              displayName: 'Remove agent IP'
              inputs:
                azureSubscription: $(SERVICE_CONNECTION_ID)
                addSpnToEnvironment: true
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  ipRange="${agentIP}"
                  az keyvault network-rule remove --name $(TF_VAR_KEY_VAULT_NAME) --ip-address $ipRange
              condition: succeededOrFailed()